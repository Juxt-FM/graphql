type User {
  id: ID!
  email: EmailAddress!
  phone: PhoneNumber
  profile: UserProfile!
  verified: Boolean!
  active: Boolean!
  suspended: Boolean!
  lastLogin: String!
  updatedAt: String!
  createdAt: String!
}

type PhoneNumber {
  number: String
  verified: Boolean
}

type EmailAddress {
  address: String!
  verified: Boolean!
}

type UserProfile {
  id: ID!
  name: String
  location: String
  summary: String
  imageURL: String
  platforms: UserPlatforms!
  watchlists: [Watchlist!]!
  posts: [BlogPost!]!
  comments: [Comment!]!
  createdAt: String!
  updatedAt: String!
}

type UserPlatforms {
  twitter: String
}

type AuthCredentials {
  accessToken: String!
}

input CreateUserInput {
  name: String
  email: String!
  phoneNumber: String
  password: String!
  confirmPassword: String!
}

input LoginUserInput {
  identifier: String!
  password: String!
}

input UpdateUserInput {
  name: String
  summary: String
  location: String
  email: String
  phoneNumber: String
}

input PasswordResetInput {
  password: String!
  confirmPassword: String!
}

type Query {
  me: User!
  userProfile(id: ID!): UserProfile!
}

type Mutation {
  createUser(data: CreateUserInput!): AuthCredentials!
  loginUser(data: LoginUserInput!): AuthCredentials!
  logoutUser: String!

  verifyEmail(code: String!): AuthCredentials
  verifyPhone(code: String!): AuthCredentials
  verifyOTP(code: String!): AuthCredentials!
  forgotPassword(email: String!): String!
  resetPassword(data: PasswordResetInput!): String!
  refreshToken: AuthCredentials!

  deactivateAccount: String!
  updateUser(data: UpdateUserInput!): User!
}
